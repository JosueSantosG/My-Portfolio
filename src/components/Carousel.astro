---

import RightIcon from "./icons/Right.astro";
import LeftIcon from "./icons/Left.astro";

---
<body class="bg-gray-100 flex">
  <div class="relative overflow-hidden w-auto h-full md:w-[35rem] md:h-full ">
    <div class="flex transition-transform duration-700 ease-in-out" id="carousel-content">
      <!-- Contenido del carrusel -->
      <div class="w-full flex-shrink-0 p-4">
        <div class="w-full h-full object-contain border-2 border-transparent rounded-xl" 
		>
          <img style="box-shadow: 0 0 15px 5px rgba(0, 0, 0, 0.3); " src="/certificates/C1.webp" class="w-full h-full object-contain rounded-xl" alt="Slide 1" />
        </div>
      </div>
      <div class="w-full flex-shrink-0 p-4">
        <div class="w-full h-full object-contain border-2 border-transparent rounded-xl" 
		>
          <img style="box-shadow: 0 0 15px 5px rgba(0, 0, 0, 0.3);" src="/certificates/C2.webp" class="w-full h-full object-contain rounded-xl" alt="Slide 3" />
        </div>
      </div>
      <!-- Clones para transición infinita -->
      <div class="w-full flex-shrink-0 p-4">
        <div class="w-full h-full object-contain border-2 border-transparent rounded-xl" 
		>
          <img style="box-shadow: 0 0 15px 5px rgba(0, 0, 0, 0.3);" src="/certificates/C1.webp" class="w-full h-full object-contain rounded-xl" alt="Slide 1" />
        </div>
      </div>
      <div class="w-full flex-shrink-0 p-4">
        <div class="w-full h-full object-contain border-2 border-transparent rounded-xl" 
		>
          <img style="box-shadow: 0 0 15px 5px rgba(0, 0, 0, 0.3);" src="/certificates/C2.webp" class="w-full h-full object-contain rounded-xl" alt="Slide 3" />
        </div>
      </div>
    </div>
    <!-- Controles del Carrusel -->
    <button id="prev" class="absolute rounded-full left-0 top-1/2 transform -translate-y-1/2 bg-gray-800 text-white px-2 py-2 mx-4 opacity-50 hover:opacity-100 focus:outline-none">
	<LeftIcon />
	</button>
    <button id="next" class="absolute rounded-full right-0 top-1/2 transform -translate-y-1/2 bg-gray-800 text-white px-2 py-2 mx-4 opacity-50 hover:opacity-100 focus:outline-none">
	<RightIcon />
	</button>
    <!-- Botón de Pausa -->
    <button id="pause" class="absolute bottom-4 left-1/2 transform -translate-x-1/2 bg-gray-800 text-white px-4 py-2 opacity-50 hover:opacity-100 focus:outline-none">Pause</button>
  </div>
</body>
  

<script>
	document.addEventListener("DOMContentLoaded", function () {
		let currentIndex = 0;
		const carouselContent = document.getElementById("carousel-content");
		const totalSlides = 2; // Número de slides originales

		if (!carouselContent) {
			console.error("Elemento del carrusel no encontrado.");
			return;
		}

		const nextButton = document.getElementById("next");
		const prevButton = document.getElementById("prev");
		const pauseButton = document.getElementById("pause");

		if (!nextButton || !prevButton || !pauseButton) {
			console.error("Botones de control del carrusel no encontrados.");
			return;
		}

		let isPaused = false;
		let intervalId : any;
		let isAnimating = false;

		function updateCarousel() {
			const offset = -currentIndex * 100;
			carouselContent!.style.transition = 'transform 0.7s ease-in-out';
			carouselContent!.style.transform = `translateX(${offset}%)`;
			isAnimating = true;

			// Si estamos en el último slide original, saltamos al inicio 
			if (currentIndex >= totalSlides) {
				setTimeout(() => {
					carouselContent!.style.transition = 'none';
					currentIndex = 0;
					const resetOffset = -currentIndex * 100;
					carouselContent!.style.transform = `translateX(${resetOffset}%)`;
					isAnimating = false;
				}, 700); // Duración de la transición
			} else {
				setTimeout(() => {
					isAnimating = false;
				}, 700);
			}
		}

		function moveNext() {
			if (isAnimating) return;
			currentIndex++;
			updateCarousel();
		}

		function movePrev() {
			if (isAnimating) return;
			if (currentIndex > 0) {
				currentIndex--;
				updateCarousel();
			} else {
				// Saltar al final al hacer clic en "Prev" en el primer slide
				carouselContent!.style.transition = 'none';
				currentIndex = totalSlides;
				const resetOffset = -currentIndex * 100;
				carouselContent!.style.transform = `translateX(${resetOffset}%)`;
				isAnimating = true;

				// Luego moverse al slide anterior
				setTimeout(() => {
					carouselContent!.style.transition = 'transform 0.7s ease-in-out';
					currentIndex--;
					updateCarousel();
				}, 50);
			}
		}

		function startCarousel() {
			intervalId = setInterval(() => {
				if (!isPaused) {
					moveNext();
				}
			}, 4000); // Duración de cada slide
		}

		function pauseCarousel() {
			clearInterval(intervalId);
		}

		nextButton.addEventListener("click", () => {
			moveNext();
			if (isPaused) {
				pauseCarousel();
			}
		});

		prevButton.addEventListener("click", () => {
			movePrev();
			if (isPaused) {
				pauseCarousel();
			}
		});

		pauseButton.addEventListener("click", () => {
			isPaused = !isPaused;
			if (isPaused) {
				pauseCarousel();
				pauseButton.textContent = "Play";
			} else {
				startCarousel();
				pauseButton.textContent = "Pause";
			}
		});

		startCarousel(); // Iniciar el carrusel
	});
</script>