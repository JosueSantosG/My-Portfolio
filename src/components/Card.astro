---
import LinkButton from './LinkButton.astro';
import GitHub from './icons/GitHub.astro';
import Link from './icons/Link.astro';

interface Props {
	Demo: string;
	icon?: any;
	title: string;
	descripcion: string;
	tags: Array<{ name: string, class: string, icon: any }>;
	link?: string;
	github?: string;

}

const { Demo, title, icon:Icon, descripcion, tags, link, github } = Astro.props;
---

	<div class="relative flex w-full flex-col rounded-xl bg-[#e3e3e3] dark:bg-[#1f2b3e]  bg-clip-border shadow-md">
		<div class="relative 
		mx-4 -mt-6 mb-4

		col-span-6 
        row-span-5 
        
		
        overflow-clip
        rounded-xl 
        md:group-hover:-translate-y-1 md:group-hover:shadow-2xl 
        lg:border lg:border-gray-800">
			<video class="w-full h-full object-cover object-left-bottom" src={Demo}             
            autoplay
            loop
            muted
            playsinline></video>
		</div>
		<div class="flex flex-wrap mt-2 mx-4">
			<h3 class="flex items-center gap-x-3 text-2xl font-bold text-gray-800 dark:text-gray-100">
				<Icon class="size-8" />
				{title}
			</h3>
			<div class="my-3 text-gray-700 dark:text-gray-300">
				{descripcion}
				
			</div>
			<ul class="flex flex-row mb-2 gap-x-2">
			  {tags.map((tag) => (
				<li>
				  <span
					class={`flex gap-x-2 rounded-full text-xs ${tag.class} py-1 px-2 `}
				  >
					<tag.icon class="size-4" />
					{tag.name}
				  </span>
				</li>
			  ))}
			</ul>
  
			
			<footer class="flex items-end justify-start my-4 gap-x-4">
			  {github && (
				<LinkButton href={github}>
				  <GitHub class="size-6" />
				  Code
				</LinkButton> 
			  )}
			  {link && (
				<LinkButton href={link}>
				  <Link class="size-4" />
				  Preview
				</LinkButton>
			  )}
			</footer>
		  </div>
		</div>

